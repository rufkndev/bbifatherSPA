#!/usr/bin/env python3
"""
Telegram Bot –¥–ª—è BBI Father
–û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç —Å Web App –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
"""

import os
import asyncio
import logging
import requests
from typing import Optional

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ —Ç–æ —á—Ç–æ –Ω—É–∂–Ω–æ –±–æ—Ç—É)
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "")
ADMIN_CHAT_ID = os.getenv("TELEGRAM_ADMIN_CHAT_ID", "")  # ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–∏
ADMIN_USERNAME = os.getenv("TELEGRAM_ADMIN_USERNAME", "bbifatheradmin")  # Username –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞  
WEB_APP_URL = os.getenv("WEB_APP_URL", "https://bbifather.ru")
API_BASE_URL = os.getenv("API_BASE_URL", "https://bbifather.ru/api")  # URL –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤

if not BOT_TOKEN:
    raise ValueError("TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ .env —Ñ–∞–π–ª–µ!")

class BBIFatherBot:
    def __init__(self):
        self.app = Application.builder().token(BOT_TOKEN).build()
        self.setup_handlers()

    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.app.add_handler(CommandHandler("start", self.start_command))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(CommandHandler("rules", self.rules_command))
        self.app.add_handler(CommandHandler("support", self.support_command))
        self.app.add_handler(CommandHandler("download", self.download_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é)
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        logger.info("üîß –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await self.save_user_chat_id(user)
        
        welcome_text = f"""
üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>BBI Father</b> - —Å–µ—Ä–≤–∏—Å –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç!

üéì –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –ó–∞–∫–∞–∑–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç
‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤  
‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –ø—Ä—è–º–æ –≤ Telegram

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:
        """
        
        keyboard = self.get_main_keyboard(user.username)
        
        await update.message.reply_text(
            welcome_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É BBI Father</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/rules - –ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
/support - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞

<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
2Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –¥–µ—Ç–∞–ª—è–º–∏ —Ä–∞–±–æ—Ç—ã
3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞
4Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ –≥–æ—Ç–æ–≤—É—é —Ä–∞–±–æ—Ç—É —á–µ—Ä–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ

<b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
–ù–∞–∂–º–∏—Ç–µ "üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞" –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        """
        
        keyboard = self.get_main_keyboard(update.effective_user.username)
        
        await update.message.reply_text(
            help_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )

    async def rules_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /rules"""
        await self.send_rules(update, context)

    async def support_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /support"""
        await self.handle_support_request(update, context)

    def get_main_keyboard(self, username: Optional[str] = None) -> ReplyKeyboardMarkup:
        """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
        keyboard = [
            [
                KeyboardButton(
                    "üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                    web_app=WebAppInfo(url=f"{WEB_APP_URL}?telegram={username or 'user'}")
                )
            ],
            [
                KeyboardButton("üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"),
                KeyboardButton("üìã –ü—Ä–∞–≤–∏–ª–∞")
            ],
            [
                KeyboardButton("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞"),
                KeyboardButton("üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã")
            ]
        ]
        return ReplyKeyboardMarkup(
            keyboard, 
            resize_keyboard=True, 
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ"
        )

    async def save_user_chat_id(self, user):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        if not user.username:
            logger.warning(f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name} (ID: {user.id}) –Ω–µ—Ç username")
            return
            
        try:
            # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ URL —Å–æ–¥–µ—Ä–∂–∏—Ç /api
            api_url = API_BASE_URL
            if not api_url.endswith('/api'):
                api_url = api_url.rstrip('/') + '/api'
            
            full_url = f"{api_url}/save-chat-id"
            logger.info(f"üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º chat_id –Ω–∞: {full_url}")
            
            response = requests.post(
                full_url,
                json={
                    "telegram_username": user.username,
                    "chat_id": user.id,
                    "first_name": user.first_name,
                    "last_name": user.last_name or ""
                },
                timeout=5
            )
            
            if response.status_code == 200:
                logger.info(f"‚úÖ Chat ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è @{user.username}")
            else:
                logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å chat_id: {response.text}")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è chat_id: {e}")

    async def send_rules(self, update: Update, context: ContextTypes.DEFAULT_TYPE, edit: bool = False):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∞–≤–∏–ª –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–º"""
        rules_text = """
üìã <b>–ü—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BBI Father</b>

<b>üéØ –ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º:</b>
‚úÖ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é
‚úÖ –ö—É—Ä—Å–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
‚úÖ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è
‚úÖ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∫–æ–¥—É

<b>‚è∞ –°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</b>
‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ª–∞–±–∞: 1-3 –¥–Ω—è
‚Ä¢ –ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞: 5-7 –¥–Ω–µ–π
‚Ä¢ –°—Ä–æ—á–Ω—ã–µ –∑–∞–∫–∞–∑—ã: +50% –∫ —Å—Ç–æ–∏–º–æ—Å—Ç–∏

<b>üí∞ –û–ø–ª–∞—Ç–∞:</b>
‚Ä¢ –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100%
‚Ä¢ –û–ø–ª–∞—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç—É –¢–∏–Ω—å–∫–æ—Ñ—Ñ
‚Ä¢ –ß–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–æ—Ç–µ

<b>üìù –ì–∞—Ä–∞–Ω—Ç–∏–∏:</b>
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–∞–≤–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–ª–∞–≥–∏–∞—Ç
‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ –∫–æ–¥–µ

<b>üö´ –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º:</b>
‚ùå –≠–∫–∑–∞–º–µ–Ω—ã –∏ –∑–∞—á–µ—Ç—ã –æ–Ω–ª–∞–π–Ω
‚ùå –ù–∞–ø–∏—Å–∞–Ω–∏–µ –¥–∏–ø–ª–æ–º–Ω—ã—Ö —Ä–∞–±–æ—Ç
‚ùå –ù–∞—Ä—É—à–µ–Ω–∏–µ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∞–≤–∏–ª

<b>üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00 MSK
        """
        
        keyboard = self.get_main_keyboard(update.effective_user.username)
        
        await update.message.reply_text(
            rules_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )

    async def handle_support_request(self, update: Update, context: ContextTypes.DEFAULT_TYPE, edit: bool = False):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫ –∞–¥–º–∏–Ω—É"""
        user = update.effective_user
        
        support_text = f"""
üí¨ <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! 

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø—Ä—è–º—É—é.

<b>–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–∂–µ—Ç —Å:</b>
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏
‚Ä¢ –í–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ –∑–∞–∫–∞–∑–∞–º  
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
‚Ä¢ –í–æ–∑–≤—Ä–∞—Ç–æ–º —Å—Ä–µ–¥—Å—Ç–≤

<b>‚è∞ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞:</b> –æ–±—ã—á–Ω–æ –¥–æ 1 —á–∞—Å–∞ –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º üëá
        """
        
        support_text += f"\n\nüìû <b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> @{ADMIN_USERNAME}"
        
        keyboard = self.get_main_keyboard(user.username)
        
        await update.message.reply_text(
            support_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é"""
        user = update.effective_user
        message_text = update.message.text
        
        logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{message_text}' –æ—Ç {user.username or user.first_name}")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await self.save_user_chat_id(user)
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–¥–µ—Ç –æ—Ç–≤–µ—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        if context.user_data.get('waiting_for_support'):
            await self.forward_to_support(update, context)
            context.user_data['waiting_for_support'] = False
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        if message_text == "üìã –ü—Ä–∞–≤–∏–ª–∞":
            await self.send_rules(update, context)
        elif message_text == "üí¨ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞":
            await self.handle_support_request(update, context)
        elif message_text == "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞":
            await self.send_user_guide(update, context)
        elif message_text == "üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã":
            await self.download_command(update, context)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await update.message.reply_text(
                "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é –Ω–∏–∂–µ:",
                reply_markup=self.get_main_keyboard(user.username)
            )

    async def forward_to_support(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
        user = update.effective_user
        message_text = update.message.text
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text(
            "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É!\n\n"
            "–ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=self.get_main_keyboard(user.username)
        )
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É (–µ—Å–ª–∏ ID –∑–∞–¥–∞–Ω)
        if ADMIN_CHAT_ID:
            admin_message = f"""
üÜò <b>–ù–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}
üÜî <b>Username:</b> @{user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üì± <b>Telegram ID:</b> <code>{user.id}</code>
üïê <b>–í—Ä–µ–º—è:</b> —Å–µ–π—á–∞—Å

üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
{message_text}
            """
            
            try:
                await context.bot.send_message(
                    chat_id=ADMIN_CHAT_ID,
                    text=admin_message,
                    parse_mode='HTML'
                )
                logger.info(f"Support message forwarded to admin from user {user.id}")
            except Exception as e:
                logger.error(f"Failed to forward message to admin: {e}")

    async def back_to_main_menu(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        user = update.effective_user
        
        main_text = f"""
üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é BBI Father</b>

–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:

üì± <b>–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b> - —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å
üìã <b>–ü—Ä–∞–≤–∏–ª–∞</b> - –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ —Ä–∞–±–æ—Ç—ã  
üí¨ <b>–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</b> - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        """
        
        keyboard = self.get_main_keyboard(user.username)
        
        if update.callback_query:
            await update.callback_query.edit_message_text(
                main_text,
                reply_markup=keyboard,
                parse_mode='HTML'
            )

    async def send_user_guide(self, update: Update, context: ContextTypes.DEFAULT_TYPE, edit: bool = False):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏ –ø–æ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞"""
        guide_text = """
‚ÑπÔ∏è <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ BBI Father</b>

<b>üìã –ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å —Ä–∞–±–æ—Ç—É:</b>
1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ "üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
3Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –≤–µ—Å—å –∫—É—Ä—Å
4Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
5Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –¥–µ–¥–ª–∞–π–Ω –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞–∫–∞–∑

<b>üí∞ –ü—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã:</b>
‚Ä¢ –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
‚Ä¢ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–Ø –æ–ø–ª–∞—Ç–∏–ª" –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
‚Ä¢ –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã

<b>üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞:</b>
‚Ä¢ <b>–ù–æ–≤—ã–π</b> - –∑–∞–∫–∞–∑ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω
‚Ä¢ <b>–û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã</b> - –∂–¥–µ–º –≤–∞—à—É –æ–ø–ª–∞—Ç—É
‚Ä¢ <b>–û–ø–ª–∞—á–µ–Ω</b> - –æ–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞
‚Ä¢ <b>–í —Ä–∞–±–æ—Ç–µ</b> - –º—ã –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–∫–∞–∑
‚Ä¢ <b>–í—ã–ø–æ–ª–Ω–µ–Ω</b> - —Ä–∞–±–æ—Ç–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é

<b>üì• –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã:</b>
‚Ä¢ –ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –ø–æ—è–≤—è—Ç—Å—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
‚Ä¢ –í—ã —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä—è–º–æ –≤ —ç—Ç–æ–º –±–æ—Ç–µ
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "üì• –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª—ã" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é

<b>üîÑ –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</b>
‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ –≥–æ—Ç–æ–≤—É—é —Ä–∞–±–æ—Ç—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ù—É–∂–Ω—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
‚Ä¢ –û–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ

<b>üí¨ –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>
–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞"
        """
        
        keyboard = self.get_main_keyboard(update.effective_user.username)
        
        await update.message.reply_text(
            guide_text,
            reply_markup=keyboard,
            parse_mode='HTML'
        )


    async def download_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–ö–æ–º–∞–Ω–¥–∞ /download –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤"""
        keyboard = self.get_main_keyboard(update.effective_user.username)
        
        await update.message.reply_text(
            "üì• <b>–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤</b>\n\n"
            "–î–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤:\n"
            "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' –Ω–∏–∂–µ\n" 
            "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ú–æ–∏ –∑–∞–∫–∞–∑—ã'\n"
            "3. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —É –Ω—É–∂–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞\n\n"
            "–§–∞–π–ª—ã —Ç–∞–∫–∂–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –ø—Ä–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏.",
            parse_mode='HTML',
            reply_markup=keyboard
        )

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        logger.info("ü§ñ –ó–∞–ø—É—Å–∫ BBI Father Telegram Bot...")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º polling —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            self.app.run_polling(
                drop_pending_updates=True,
                close_loop=False,
                stop_signals=None  # –î–ª—è Windows
            )
        except KeyboardInterrupt:
            logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
            raise


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BBI Father Telegram Bot...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if not BOT_TOKEN:
            logger.error("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!")
            return
            
        if ADMIN_CHAT_ID:
            logger.info("üë®‚Äçüíº –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        else:
            logger.warning("‚ö†Ô∏è –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
        
        bot = BBIFatherBot()
        logger.info("ü§ñ BBI Father Telegram Bot –∑–∞–ø—É—â–µ–Ω!")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot.run()
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
    finally:
        logger.info("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")


if __name__ == "__main__":
    main()
